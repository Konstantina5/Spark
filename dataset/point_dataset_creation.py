# -*- coding: utf-8 -*-
"""point_dataset_creation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mG1LaklpKWTzff5qa8Ea-s66JzZE04nv

Create uniform dataset
"""

import sys
import csv
import argparse
import numpy as np

def generate_data(data_distribution, total_points, dimensions, csv_name):
  if data_distribution == "uniform":
      data = np.random.uniform(0.05, 1, (total_points, dimensions))
  elif data_distribution == "normal":
      data = np.random.normal(0.5, 0.15, (total_points, dimensions))
  elif data_distribution == "correlated":
      data = np.array([np.linspace(0, 1, total_points) + np.random.normal(scale=0.1, size=total_points) for _ in range(dimensions)]).T
  elif data_distribution == "anticorrelated":
      data = np.array([np.linspace(0, 1, total_points) if i == 0 else 1 - np.linspace(0, 1, total_points) + np.random.normal(scale=0.1, size=total_points) for i in range(dimensions)]).T
  data = np.clip(data, 0.01, 1)

  with open(csv_name, 'w', newline='') as file:
    writer = csv.writer(file, delimiter=' ')
    writer.writerows(data)

if __name__ == "__main__":
  parser = argparse.ArgumentParser(description="Generate data of certain distribution, size and dimension and save it to a CSV file.")
  parser.add_argument("-dist", "--distribution", choices=["uniform", "normal", "correlated", "anticorrelated"], help="Data distribution type", required=True)
  parser.add_argument("-p", "--points", type=int, help="Total number of points", required=True)
  parser.add_argument("-dim", "--dimensions", type=int, help="Number of dimensions", required=True)
  parser.add_argument("-o", "--output", help="Output CSV file name", required=True)

  args = parser.parse_args()
  generate_data(args.distribution, args.points, args.dimensions, args.output)
